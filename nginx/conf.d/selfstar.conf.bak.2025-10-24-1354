# Nginx reverse proxy for https://selfstar.duckdns.org

map $http_upgrade $connection_upgrade { default upgrade; '' close; }

upstream backend_upstream { server selfstar-backend:8000; keepalive 32; }
upstream frontend_upstream { server selfstar-frontend:5174; keepalive 32; }
upstream ai_upstream       { server selfstar-ai:8600; keepalive 16; }

server {
    listen 80;
    server_name selfstar.duckdns.org;

    # ACME HTTP-01 challenge
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect HTTP â†’ HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    http2 on;
    server_name selfstar.duckdns.org;

    ssl_certificate           /etc/letsencrypt/live/selfstar.duckdns.org/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/selfstar.duckdns.org/privkey.pem;
    ssl_trusted_certificate   /etc/letsencrypt/live/selfstar.duckdns.org/chain.pem;

    ssl_protocols TLSv1.2 TLSv1.3;

    location / {
        proxy_pass http://frontend_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/ {
        proxy_pass http://backend_upstream/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /ai/ {
        proxy_pass http://ai_upstream/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /health {
        return 200 'OK';
        add_header Content-Type text/plain;
    }
}
