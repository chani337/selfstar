# Nginx reverse proxy for https://selfstar.duckdns.org
map $http_upgrade $connection_upgrade { default upgrade; '' close; }

upstream backend_upstream  { server selfstar-backend:8000;  keepalive 32; }
upstream frontend_upstream { server selfstar-frontend:5174; keepalive 32; }

server {
    listen 80;
    server_name selfstar.duckdns.org;
    location ^~ /.well-known/acme-challenge/ { root /var/www/certbot; }
    location / { return 301 https://$host$request_uri; }
}

server {
    listen 443 ssl;
    http2 on;
    server_name selfstar.duckdns.org;

    client_max_body_size 50m;

    ssl_certificate           /etc/letsencrypt/live/selfstar.duckdns.org/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/selfstar.duckdns.org/privkey.pem;
    ssl_trusted_certificate   /etc/letsencrypt/live/selfstar.duckdns.org/chain.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    proxy_http_version 1.1;
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        $connection_upgrade;
    proxy_redirect off;

    # diag
    location = /api/ping { add_header X-Route backend always; return 204; }

    # data APIs
    # Specific remaps for backend routes that are not under /api
    location ^~ /api/chat/ {
        add_header X-Route backend always;
        proxy_pass http://backend_upstream/chat/;
        proxy_connect_timeout 60s;
        proxy_read_timeout 300s;
    }
    location ^~ /api/files/ {
        add_header X-Route backend always;
        proxy_pass http://backend_upstream/files/;
        proxy_connect_timeout 60s;
        proxy_read_timeout 300s;
    }
    location ^~ /api/instagram/ {
        add_header X-Route backend always;
        proxy_pass http://backend_upstream/instagram/;
        proxy_connect_timeout 60s;
        proxy_read_timeout 300s;
    }
    # Default: pass-through for /api routes already implemented in backend (e.g., /api/personas, /api/users, /api/images)
    location ^~ /api/   { add_header X-Route backend always; proxy_pass http://backend_upstream; proxy_connect_timeout 60s; proxy_read_timeout 300s; }

    # OAuth
    location ^~ /auth/  { add_header X-Route backend always; proxy_pass http://backend_upstream; proxy_connect_timeout 60s; proxy_read_timeout 300s; }
    location ^~ /oauth/ { add_header X-Route backend always; proxy_pass http://backend_upstream; proxy_connect_timeout 60s; proxy_read_timeout 300s; }

    # backend media and docs
    location ^~ /media/       { add_header X-Route backend always; proxy_pass http://backend_upstream; proxy_connect_timeout 60s; proxy_read_timeout 300s; }
    location = /openapi.json  { add_header X-Route backend always; proxy_pass http://backend_upstream; }
    location ^~ /docs         { add_header X-Route backend always; proxy_pass http://backend_upstream; }
    location ^~ /redoc        { add_header X-Route backend always; proxy_pass http://backend_upstream; }

    # frontend
    location / {
        add_header X-Route frontend always;
        proxy_pass http://frontend_upstream;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_connect_timeout 60s;
        proxy_read_timeout 300s;

    }
}
